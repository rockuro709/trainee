#.github/workflows/playwright.yml
name: Trainee's project
on:
  push:
    branches: main
  workflow_dispatch: #ручной запуск

#права на чтение репозитория и на публикацию отчета
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    #связь с окружением GitHub Pages, чтобы GitHub мог сгенерировать ссылку на отчет
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image with cache
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: discogs-tests:latest
          # `load: true` нужно, чтобы образ был доступен для следующего шага `docker run`
          load: true
          # `cache-from` пытается загрузить кеш из GitHub
          cache-from: type=gha
          # `cache-to` сохраняет слои в кеш GitHub после успешной сборки
          cache-to: type=gha,mode=max

      - name: Run Playwright tests in Docker
        # if:always() гарантирует, что отчеты будут созданы, даже если тесты упадут
        if: always()
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/playwright-report:/app/playwright-report \
            -v ${{ github.workspace }}/test-results:/app/test-results \
            --env DISCOGS_USERNAME=${{ secrets.DISCOGS_USERNAME }} \
            --env DISCOGS_PASSWORD=${{ secrets.DISCOGS_PASSWORD }} \
            --env DISCOGS_EMAIL=${{ secrets.DISCOGS_EMAIL }} \
            --env DISCOGS_API_TOKEN=${{ secrets.DISCOGS_API_TOKEN }} \
            --env CI=true \
            discogs-tests

      # специальный экшн упаковывает отчет в формат, понятный для публикации
      - name: Upload artifact for GitHub Pages
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: playwright-report/

      #экшн берет артефакт и публикует его
      - name: Deploy to GitHub Pages
        if: always()
        id: deployment #используется в environment.url выше
        uses: actions/deploy-pages@v4
